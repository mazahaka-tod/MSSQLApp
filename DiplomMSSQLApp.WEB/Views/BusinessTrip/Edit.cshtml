@model DiplomMSSQLApp.WEB.Models.BusinessTripViewModel

@{
    ViewBag.Title = "Обновление информации о командировке";
}

<h2>Обновление информации о командировке</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="employees">
            @for (int i = 0; i < Model.Employees.Count; i++)
            {
                string str = "employee" + i.ToString();
                <div class=@str>
                    <div class="form-group">
                        @Html.Label("Ids", "Сотрудник №" + (i + 1).ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Ids", ViewBag.Employees as SelectList, "Выберите сотрудника", new { @class = "form-control", @id = "emp_" + i })
                            @Html.ValidationMessage("Ids", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>

        <p><a id="addEmployee">Добавить сотрудника</a></p>
        <p><a id="deleteEmployee">Удалить сотрудника</a></p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Обновить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var i = @Model.Employees.Count -1;
            // Добавление сотрудника
            $('#addEmployee').click(function (e) {
                e.preventDefault();
                i++;
                var div = document.createElement('div');
                div.className = "employee" + i.toString();
                $('.employees').append(div);
                $('.employee' + i.toString()).load('@Url.Action("AddEmployeeAsync", "BusinessTrip")?index=' + i)
            });
            // Удаление сотрудника
            $('#deleteEmployee').click(function (e) {
                e.preventDefault();
                if (i > 0) {
                    $('.employee' + i.toString()).remove();
                    i--;
                }
            });

            // Устанавливаем начальные значения для DropDownList
            @for (int i = 0; i < @Model.Employees.Count; i++) {
                int id = Model.Employees.ElementAt(i).Id;
                @:$("select#emp_@i option[value='@id']").prop('selected', true);
            }
        });
    </script>
}
