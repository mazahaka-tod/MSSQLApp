@using DiplomMSSQLApp.WEB.Helpers
@model DiplomMSSQLApp.WEB.Models.PostListViewModel

@{
    ViewBag.Title = "Штатное расписание";
}

<h2>Штатное расписание</h2>
<hr />

<p>
    @Html.ActionLink("Добавить должность", "Create", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Удалить все должности", "DeleteAll", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Экспортировать данные в JSON файл", "ExportJson", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Добавить 100 должностей (для тестирования)", "TestCreate", null, new { @class = "btn btn-default" })
</p>

@*<div id="postsTable">
        @Html.Partial("GetPostsData", Model)
    </div>*@

@if (Model.Posts.Count() > 0) {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).Department.Code)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).Department.DepartmentName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).NumberOfUnits)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).Salary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).Premium)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts.ElementAt(0).TotalSalary)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody id="tableBody">
            @foreach (var item in Model.Posts) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfUnits)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Salary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Premium)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalSalary)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>

        <tfoot>
            <tr>
                <td></td>
                <td></td>
                <td>
                    <b>Итого</b>
                </td>
                <td>
                    <b>@ViewBag.TotalNumberOfUnits</b>
                </td>
                <td></td>
                <td></td>
                <td>
                    <b>@ViewBag.TotalSalary</b>
                </td>
                <td></td>
            </tr>
        </tfoot>
    </table>
}

<p>
    @Html.Label("Count", "Количество должностей: " + Model.PageInfo.TotalItems)
</p>

<div id="contentPager" class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { page = x }))
</div>

@section scripts {
    @*<script>
        $(document).ready(function () {
            // ajax paging
            $(document).on('click', '#contentPager a[href]', function () {
                $.ajax({
                    url: $(this).attr('href'),
                    type: 'GET',
                    cache: false,
                    success: function (result) {
                        $('#postsTable').html(result);
                    }
                });
                return false;
            });
        })
    </script>*@
    <script>
        function updateHrefAttr(target, numPage) {
            var attr_href = target.attr('href');
            var lastIndex = attr_href.lastIndexOf('=');
            attr_href = attr_href.substring(0, lastIndex + 1) + numPage;
            target.attr({
                'data-ajax-url': attr_href,
                'href': attr_href
            });
        }

        function processData(data) {
            // Заполняем таблицу
            var target = $('#tableBody');
            target.empty();
            for (var i = 0; i < data.Posts.length; i++) {
                var post = data.Posts[i];
                target.append('<tr><td>' + post.DepartmentCode + '</td>'
                                + '<td>' + post.DepartmentName + '</td>'
                                + '<td>' + post.Title          + '</td>'
                                + '<td>' + post.NumberOfUnits  + '</td>'
                                + '<td>' + post.Salary         + '</td>'
                                + '<td>' + post.Premium        + '</td>'
                                + '<td>' + post.TotalSalary    + '</td>'
                                + '<td>' + '<a href="/Post/Edit/'   + post.Id + '">Edit</a> | '
                                         + '<a href="/Post/Details/'+ post.Id + '">Details</a> | '
                                         + '<a href="/Post/Delete/' + post.Id + '">Delete</a></td></tr>');
            }

            // Обновляем кнопки навигации
            // Кнопка '<'
            var numPage = data.PageInfo.PageNumber > 3 ? data.PageInfo.PageNumber - 3 : 1;
            target = $('#leftbutton');
            updateHrefAttr(target, numPage);

            // Кнопка '>'
            numPage = data.PageInfo.PageNumber < data.PageInfo.TotalPages - 3 ? data.PageInfo.PageNumber + 3 : data.PageInfo.TotalPages;
            target = $('#rightbutton');
            updateHrefAttr(target, numPage);

            // Кнопка '>>'
            numPage = data.PageInfo.TotalPages;
            target = $('#lastpagebutton');
            updateHrefAttr(target, numPage);

            // Кнопки с цифрами
            $('a.centerbuttons').remove();
            var minPage = data.PageInfo.PageNumber > 1 ? data.PageInfo.PageNumber - 1 : 1;
            var maxPage = data.PageInfo.PageNumber < data.PageInfo.TotalPages - 1 ? data.PageInfo.PageNumber + 1 : data.PageInfo.TotalPages;
            for (numPage = minPage; numPage <= maxPage; numPage++) {
                target = $('#leftbutton').clone().insertBefore('#rightbutton');
                updateHrefAttr(target, numPage);
                target.text(numPage);
                // если текущая страница, то выделяем ее
                if (numPage == data.PageInfo.PageNumber)
                    target.addClass('centerbuttons btn btn-primary selected');
                else
                    target.addClass('centerbuttons btn btn-default');
            }

            // Обновляем метку 'Количество сотрудников: '
            $('Count').val('Количество сотрудников: ' + data.PageInfo.TotalItems);
        }
    </script>
}
