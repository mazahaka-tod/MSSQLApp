@using DiplomMSSQLApp.WEB.Helpers
@model DiplomMSSQLApp.WEB.Models.LeaveScheduleListViewModel

@{
    ViewBag.Title = "Список графиков отпусков";
}

<h2>Список графиков отпусков</h2>
<hr />

<p>
    @Html.ActionLink("Добавить график отпусков", "Create", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Удалить все графики отпусков", "DeleteAll", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Экспортировать данные в JSON файл", "ExportJson", null, new { @class = "btn btn-default" })
</p>

@if (Model.LeaveSchedules.Count() > 0) {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveSchedules.ElementAt(0).Number)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveSchedules.ElementAt(0).Year)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveSchedules.ElementAt(0).DateOfPreparation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveSchedules.ElementAt(0).DateOfApproval)
                </th>
                <th width="150px"></th>
            </tr>
        </thead>

        <tbody id="tableBody">
            @foreach (var item in Model.LeaveSchedules) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>
                    <td>
                        @item.DateOfPreparation.ToString("dd MMMM yyyy")
                    </td>
                    <td>
                        @if (item.DateOfApproval.HasValue) {
                            @item.DateOfApproval.Value.ToString("dd MMMM yyyy")
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<p>
    @Html.Label("Count", "Количество графиков отпусков: " + Model.PageInfo.TotalItems)
</p>

<div id="contentPager" class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { page = x }))
</div>

@section scripts {
    <script>
        function updateHrefAttr(target, numPage) {
            var attr_href = '/LeaveSchedule?page=' + numPage;
            target.attr({
                'data-ajax-url': attr_href,
                'href': attr_href
            });
        }

        function processData(data) {
            // Заполняем таблицу
            var target = $('#tableBody');
            target.empty();
            for (var i = 0; i < data.LeaveSchedules.length; i++) {
                $('#tableBody').append('<tr>');
                target = $('#tableBody tr:last');
                var leaveSchedule = data.LeaveSchedules[i];
                target.append('<td>' + leaveSchedule.Number + '</td>' +
                    '<td>' + leaveSchedule.Year + '</td>' +
                    '<td>' + leaveSchedule.DateOfPreparation + '</td>' +
                    '<td>' + leaveSchedule.DateOfApproval + '</td>' +
                    '<td><a href="/LeaveSchedule/Edit/' + leaveSchedule.Id + '">Edit</a> | '
                    + '<a href="/LeaveSchedule/Delete/' + leaveSchedule.Id + '">Delete</a></td>');
            }

            // Обновляем кнопки навигации
            // Кнопка '<<'
            target = $('#firstpagebutton');
            updateHrefAttr(target, 1);

            // Кнопка '<'
            var numPage = data.PageInfo.PageNumber > 3 ? data.PageInfo.PageNumber - 3 : 1;
            target = $('#leftbutton');
            updateHrefAttr(target, numPage);

            // Кнопка '>'
            numPage = data.PageInfo.PageNumber < data.PageInfo.TotalPages - 3 ? data.PageInfo.PageNumber + 3 : data.PageInfo.TotalPages;
            target = $('#rightbutton');
            updateHrefAttr(target, numPage);

            // Кнопка '>>'
            numPage = data.PageInfo.TotalPages;
            target = $('#lastpagebutton');
            updateHrefAttr(target, numPage);

            // Кнопки с цифрами
            $('a.centerbuttons').remove();
            var minPage = data.PageInfo.PageNumber > 1 ? data.PageInfo.PageNumber - 1 : 1;
            var maxPage = data.PageInfo.PageNumber < data.PageInfo.TotalPages - 1 ? data.PageInfo.PageNumber + 1 : data.PageInfo.TotalPages;
            for (numPage = minPage; numPage <= maxPage; numPage++) {
                target = $('#leftbutton').clone().insertBefore('#rightbutton');
                updateHrefAttr(target, numPage);
                target.text(numPage);
                // если текущая страница, то выделяем ее
                if (numPage == data.PageInfo.PageNumber)
                    target.addClass('centerbuttons btn btn-primary selected');
                else
                    target.addClass('centerbuttons btn btn-default');
            }
        }
    </script>
}
